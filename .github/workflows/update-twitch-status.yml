name: Update Twitch status JSON

on:
  schedule:
    - cron: "*/15 * * * *"   # every 15 min
  workflow_dispatch:        # manual trigger button

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Install deps          # <--- new
        run: npm install node-fetch@3

      - name: Generate twitch-status.json
        env:
          CLIENT_ID:     ${{ secrets.TWITCH_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}
          USER_LOGIN:    mnkway
        run: |
          node <<'NODE'
          import fs from 'fs';
          const fetch = (...args) => import('node-fetch').then(({default: f}) => f(...args));

          const { CLIENT_ID, CLIENT_SECRET, USER_LOGIN } = process.env;

          const tokenRes = await fetch(
            `https://id.twitch.tv/oauth2/token?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&grant_type=client_credentials`,
            { method: 'POST' }
          );
          const { access_token } = await tokenRes.json();

          const liveRes = await fetch(
            `https://api.twitch.tv/helix/streams?user_login=${USER_LOGIN}`,
            { headers: { 'Client-ID': CLIENT_ID, 'Authorization': `Bearer ${access_token}` } }
          );
          const { data } = await liveRes.json();
          const online = Array.isArray(data) && data.length > 0;

          fs.writeFileSync(
            'twitch-status.json',
            JSON.stringify({ online, checked: new Date().toISOString() }, null, 2)
          );
          NODE

      - name: Commit & push the JSON
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: update Twitch status JSON"
